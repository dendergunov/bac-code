openapi: 3.0.1
paths:
  /vaults/{vaultUuid}/items:
    get:
      operationId: GetVaultItems
      parameters:
      - description: The UUID of the Vault to fetch Items from
        in: path
        name: vaultUuid
        required: true
        schema:
          pattern: ^[\da-z]{26}$
          type: string
        parameter_level_properties:
          is_identifier: true
          location: path
          type: UUID
      - description: Filter the Item collection based on Item name using SCIM eq filter
        in: query
        name: filter
        schema:
          example: title eq "Some Item Name"
          type: string
        parameter_level_properties:
          is_identifier: false
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Item'
                type: array
          description: OK
        '401':
          content:
            application/json:
              example:
                message: Invalid token signature
                status: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid or missing token
        '404':
          content:
            application/json:
              example:
                message: vault {vaultUuid} not found
                status: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Vault not found
      security:
      - ConnectToken: []
      summary: Get all items for inside a Vault
      tags:
      - Items
      method_level_properties:
        operation_only_parameters_specified: true
        parameters_required: true
        has_body: false
        identifiers_used: single
        authorization_required: true
    post:
      operationId: CreateVaultItem
      parameters:
      - description: The UUID of the Vault to create an Item in
        in: path
        name: vaultUuid
        required: true
        schema:
          pattern: ^[\da-z]{26}$
          type: string
        parameter_level_properties:
          is_identifier: true
          location: path
          type: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullItem'
          description: OK
        '400':
          content:
            application/json:
              example:
                message: Invalid item category
                status: 400
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to create item due to invalid input
        '401':
          content:
            application/json:
              example:
                message: Invalid token signature
                status: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid or missing token
        '403':
          content:
            application/json:
              example:
                message: vault {vaultUuid} is not in scope
                status: 403
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized access
        '404':
          content:
            application/json:
              examples:
                vaultNotFound:
                  summary: Vault not found
                  value:
                    message: vault {vaultUuid} not found
                    status: 404
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Item not found
      security:
      - ConnectToken: []
      summary: Create a new Item
      tags:
      - Items
      method_level_properties:
        operation_only_parameters_specified: true
        parameters_required: true
        has_body: true
        identifiers_used: single
        authorization_required: true
    endpoint_level_properties:
      defined_http_verbs: Multiple
